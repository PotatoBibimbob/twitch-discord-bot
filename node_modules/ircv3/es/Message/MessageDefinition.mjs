import { Message } from "./Message.mjs";
// eslint-disable-next-line @typescript-eslint/ban-types
var isMessageType = function (ctor) {
    return Object.prototype.isPrototypeOf.call(Message, ctor);
};
export var MessageType = function (commandName) {
    return function (target) {
        if (!isMessageType(target)) {
            throw new Error('You need to extend the Message class to use the MessageType decorator');
        }
        target.COMMAND = commandName;
    };
};
export var MessageParamDefinition = function (spec) {
    if (spec === void 0) { spec = {}; }
    return function (target, propertyKey) {
        var _a;
        if (!(target instanceof Message)) {
            throw new Error('You need to extend the Message class to use the MessageParam decorator');
        }
        if (typeof propertyKey !== 'string') {
            return;
        }
        var cls = target.constructor;
        ((_a = cls.PARAM_SPEC) !== null && _a !== void 0 ? _a : (cls.PARAM_SPEC = {}))[propertyKey] = spec;
    };
};
